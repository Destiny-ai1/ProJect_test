<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.order.OrderDetailDao">
	<!-- 주문 상세 정보 저장 -->
	<insert id="save"
		parameterType="com.example.demo.order.OrderDetailDto">
		INSERT INTO orders_detail (order_no, item_no, item_name,
		image, detail_ea,
		price, item_size, review_written)
		VALUES (#{orderNo},
		#{itemNo}, #{itemName}, #{image, jdbcType=VARCHAR},
		#{detailEa},
		#{price}, #{itemSize}, #{reviewWritten, jdbcType=CHAR})
	</insert>

	<select id="findAll" parameterType="map" resultMap="OrderDetailResultMap">
   		 SELECT 
		        od.order_no, od.item_no, od.item_name, od.image, od.detail_ea, od.price, 
		        od.review_written, od.item_size, o.order_status, o.order_date, o.member_username
    	FROM orders_detail od
    		JOIN orders o ON od.order_no = o.order_no
    		WHERE o.order_status = 'SUCCESS'
    		AND o.order_date IS NOT NULL
    		AND o.member_username = #{memberUsername}
    	<if test="orderNo != null">
    	   		AND od.order_no = #{orderNo}
    	</if>
	</select>




	<!-- 주문 상세 정보 업데이트 -->
	<update id="update"
		parameterType="com.example.demo.order.OrderDetailDto">
		UPDATE orders_detail
		SET item_name = #{itemName}, image = #{image}, detail_ea = #{detailEa},
		price = #{price}, review_written = #{reviewWritten}
		WHERE order_no = #{orderNo} AND item_no = #{itemNo}
	</update>

	<!-- 주문 번호로 주문 상세 정보 삭제 -->
	<delete id="deleteByOrderNo" parameterType="long">
		DELETE FROM orders_detail WHERE order_no = #{orderNo}
	</delete>

	<!-- 주문 상세 정보 복원 - 장바구니로 복원 -->
	<insert id="restoreToCart"
		parameterType="com.example.demo.order.OrderDetailDto">
		INSERT INTO cart (item_no, username, cart_ea,
		cart_price, cart_totalprice)
		VALUES (#{itemNo}, #{username},
		#{detailEa}, #{price}, #{detailEa} * #{price})
	</insert>

	<!-- 주문 상세 조회를 위한 OrderDetailResultMap -->
	<resultMap id="OrderDetailResultMap"
		type="com.example.demo.order.OrderDetail">
		<id property="orderNo" column="order_no" jdbcType="NUMERIC" />
		<result property="itemNo" column="item_no" jdbcType="NUMERIC" />
		<result property="itemName" column="item_name"
			jdbcType="VARCHAR" />
		<result property="image" column="image" jdbcType="VARCHAR" />
		<result property="detailEa" column="detail_ea"
			jdbcType="INTEGER" />
		<result property="price" column="price" jdbcType="NUMERIC" />
		<result property="reviewWritten" column="review_written"
			jdbcType="CHAR" />
		<!-- 새로운 컬럼들 추가 -->
		<result property="orderStatus" column="order_status"
			jdbcType="VARCHAR" />
		<result property="orderDate" column="order_date"
			jdbcType="TIMESTAMP" />
		<result property="memberUsername" column="member_username"
			jdbcType="VARCHAR" />
	</resultMap>
</mapper>
