<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.item.ItemDao">

	<select id="countImagesByItemNo" resultType="Long">
		SELECT COUNT(*)
		FROM item_image
		WHERE item_no = #{itemNo}
	</select>


	<!-- ItemDao save 메서드 (item 저장) -->
	<insert id="save" useGeneratedKeys="true" keyProperty="itemNo">
		<selectKey keyProperty="itemNo" order="BEFORE"
			resultType="long">
			select ITEM_SEQ.nextval from dual
		</selectKey>
		insert into item(item_no, item_irum, item_info, item_price,
		item_jango, item_sell_qty, item_size, review_ea, cno)
		values(
		#{itemNo,
		jdbcType=NUMERIC},
		#{itemIrum, jdbcType=VARCHAR},
		#{itemInfo,
		jdbcType=VARCHAR},
		#{itemPrice, jdbcType=NUMERIC},
		#{itemJango,
		jdbcType=NUMERIC},
		#{itemSellQty, jdbcType=INTEGER},
		#{itemSize,
		jdbcType=INTEGER},
		#{reviewEa, jdbcType=INTEGER},
		#{cno,
		jdbcType=INTEGER}
		)
	</insert>

	<!-- 상품 정보 조회 (여러 이미지를 반환) -->
	<resultMap id="joinMap"
		type="com.example.demo.item.ItemDto$Read">
		<id property="itemNo" column="item_no" />
		<result property="itemIrum" column="item_irum" />
		<result property="itemInfo" column="item_info" />
		<result property="itemPrice" column="item_price" />
		<result property="itemJango" column="item_jango" />
		<result property="itemSellQty" column="item_sell_qty" />
		<result property="itemSize" column="item_size" />
		<result property="reviewEa" column="review_ea" />
		<result property="cno" column="cno" />
		<!-- 여러 개의 이미지 URL을 List<String>으로 반환 -->
		<collection property="itemImages" javaType="java.util.List"
			ofType="string">
			<result column="item_image" />
		</collection>
	</resultMap>

	<!-- 상품 리스트를 매핑하는 ResultMap -->
	<resultMap id="itemListResultMap"
		type="com.example.demo.item.ItemDto$ItemList">
		<id property="itemNo" column="item_no" />
		<result property="itemIrum" column="item_irum" />
		<result property="itemInfo" column="item_info" />
		<result property="itemPrice" column="item_price" />
		<result property="itemJango" column="item_jango" />
		<result property="itemSellQty" column="item_sell_qty" />
		<result property="itemSize" column="item_size" />
		<result property="reviewEa" column="review_ea" />
		<result property="cno" column="cno" />
		<result property="itemImage" column="item_image" />
	</resultMap>

	<!-- 카테고리 번호에 해당하는 상품들을 조회하는 SQL 쿼리 -->
	<select id="findItemsByCategory" resultMap="itemListResultMap">
		SELECT
		it.item_no,
		it.item_irum,
		it.item_info,
		it.item_price,
		it.item_jango,
		it.item_sell_qty,
		it.item_size,
		it.review_ea,
		it.cno,
		COALESCE(#{imageUrl, jdbcType=VARCHAR} || im.image_name,
		'normal/default-image.jpg') AS
		item_image
		FROM item it
		LEFT JOIN
		item_image im ON it.item_no = im.item_no
		WHERE it.cno IN (
		<!-- 대분류(cno)와 연결된 소분류를 조회 -->
		SELECT c.cno
		FROM category c
		WHERE c.pno = #{cno} -- 소분류의 cno를 찾기 위한 조건
		UNION ALL
		<!-- 대분류 자체도 포함 -->
		SELECT g.cno
		FROM category g
		WHERE g.cno = #{cno}
		)
	</select>

	<!-- 상품 정보 조회 (여러 이미지를 반환) -->
	<select id="findById" resultMap="joinMap">
		SELECT it.item_no, it.item_irum,
		it.item_info, it.item_price, it.item_jango,
		it.item_sell_qty,
		it.item_size, it.review_ea, it.cno,
		COALESCE(#{imageUrl} ||
		im.image_name, 'normal/default-image.jpg') AS
		item_image
		FROM item it
		LEFT JOIN item_image im ON it.item_no = im.item_no
		WHERE it.item_no =
		#{itemNo}
	</select>

	<!-- 상품에 따른 평균 평점 계산 -->
	<select id="findAverageRatingByItemNo" resultType="double">
		select
		case
		when count(r.review_no) > 0 then
		round(sum(r.review_good_cnt) /
		count(r.review_no), 1)
		else
		0
		end as avg_rating
		from item i
		left join
		review r on i.item_no = r.item_no
		where i.item_no = #{itemNo}
	</select>
</mapper>
